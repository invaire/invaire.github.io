// –°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ç–æ—á–∫–∞
document.addEventListener("DOMContentLoaded", () => {
    const startBtn = document.querySelector('.start-content button');

    startBtn.addEventListener('click', () => {
        const wrap = document.querySelector('#startOverlay .start-content');
        const btnRect = startBtn.getBoundingClientRect();
        const wrapRect = wrap.getBoundingClientRect();

        // —Ü–µ–Ω—Ç—Ä –∫–Ω–æ–ø–∫–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        const cx = btnRect.left + btnRect.width / 2 - wrapRect.left;
        const cy = btnRect.top + btnRect.height / 2 - wrapRect.top;

        // 1) –≤—Å–ø—ã—à–∫–∞
        wrap.style.setProperty('--x', cx + 'px');
        wrap.style.setProperty('--y', cy + 'px');
        wrap.classList.add('flash');

        // 2) –∏—Å–∫—Ä—ã
        const hues = [0, 45, 200, 120, 300]; // –∫—Ä–∞—Å–Ω—ã–π, –∂—ë–ª—Ç—ã–π, –∑–µ–ª—ë–Ω—ã–π, —Å–∏–Ω–∏–π, —Ä–æ–∑–æ–≤—ã–π
        const count = 40;  // —Ä–∞–∑–º–µ—Ä —Ñ–µ–π–µ—Ä–≤–µ—Ä–∫–∞, –º–Ω–æ–≥–æ –∏—Å–∫—Ä
        for (let i = 0; i < count; i++) {
            const s = document.createElement('span');
            s.className = 'spark';
            s.style.left = cx + 'px';
            s.style.top = cy + 'px';

            // —É–≥–æ–ª + —Å–∫–æ—Ä–æ—Å—Ç—å
            const angle = (Math.PI * 2) * (i / count);

            // üéá —Å–ª—É—á–∞–π–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∏—Å–∫—Ä—ã (–æ—Ç 6px –¥–æ 16px)
            const size = 4 + (Math.random() + 1) * 8;
            s.style.width = size + 'px';
            s.style.height = size + 'px';

            // –±–∞–∑–æ–≤–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å (150‚Äì250)
            const base = 250 + (Math.random() + 1.0) * 200; //—Å–∫–æ—Ä–æ—Å—Ç—å 250‚Äì450 px

            // –º–Ω–æ–∂–∏—Ç–µ–ª—å: –∫—Ä—É–ø–Ω–µ–µ –∏—Å–∫—Ä–∞ ‚Üí –º–µ–¥–ª–µ–Ω–Ω–µ–µ –ª–µ—Ç–∏—Ç (0.9..1.3)
            const factor = 0.9 + (size / 16.0) * 0.4;  // –°–≤—è–∑—å —Ä–∞–∑–º–µ—Ä–∞ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏

            // –∏—Ç–æ–≥–æ–≤–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å
            const speed = base * factor;

            // ‚è± –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –∫—Ä—É–ø–Ω–µ–µ –∏—Å–∫—Ä–∞ ‚Äî –¥–æ–ª—å—à–µ –∂–∏–≤—ë—Ç (0.9s..1.8s)
            const dur = 1.5 + (size / 16.0) * 4;  // 1.5‚Äì3s
            s.style.setProperty('--dur', dur + 's');

            // –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
            s.style.setProperty('--dx', Math.cos(angle) * speed + 'px');
            s.style.setProperty('--dy', Math.sin(angle) * speed + 'px');

            // —Ü–≤–µ—Ç
            s.style.setProperty('--h', hues[i % hues.length]);

            wrap.appendChild(s);
        }

        setTimeout(() => {
            // 3) –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ –æ–≤–µ—Ä–ª–µ—è
            const overlay = document.getElementById('startOverlay');
            // –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
            overlay.classList.add('hidden');
        }, 1500);
    });

});

let currentWord = null;
let modalOpen = false;

const modal = document.createElement('div');
modal.id = 'modal';
modal.innerHTML = `
      <div class="modal-content">
        <span class="close">&times;</span>
        <p id="question-text"></p>
        <img id="question-image" src="" alt="" style="max-width: 100%; display: none;"/>
        <input type="text" id="user-answer" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ...">
        <div class="wrong-answer">‚ùÑÔ∏è –û–π! –ü–æ—á—Ç–∏ —É–≥–∞–¥–∞–ª, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑–æ–∫</div>
        <button class="btns" id="submit-answer">–û–ö</button>
      </div>
    `;
document.body.appendChild(modal);
const wrongText = modal.getElementsByClassName("wrong-answer");
const
    modalOk = document.getElementById('submit-answer'),
    modalInput = document.getElementById('user-answer');

const container = document.getElementById('crossword');

const rows = 19, cols = 11;
const words = [
    { text: '–°–ù–ï–ì–û–í–ò–ö', q: '‚ú® –°—Ç–æ–∏—Ç –≤–æ –¥–≤–æ—Ä–µ —Å –º–æ—Ä–∫–æ–≤–∫–æ–π –≤–º–µ—Å—Ç–æ –Ω–æ—Å–∞. (8 –±—É–∫–≤)', row: 0, col: 1, img: 'img/snegovik.jpg', m: 5 },
    { text: '–ö–ê–ö–ê–û', q: '‚ú® –ö–∞–∫–æ–π –≤–æ–ª—à–µ–±–Ω—ã–π —à–æ–∫–æ–ª–∞–¥–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ –ø—å—é—Ç, —á—Ç–æ–±—ã —Å–æ–≥—Ä–µ—Ç—å—Å—è? (5 –±—É–∫–≤)', row: 1, col: 2, img: 'img/kakao.jpg', m: 4 },
    { text: '–ï–õ–ö–ê', q: '‚ú® –ö–∞–∫ –∑–æ–≤—É—Ç –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–µ –Ω–∞—Ä—è–¥–Ω–æ–µ –¥–µ—Ä–µ–≤–æ? (4 –±—É–∫–≤—ã)', row: 2, col: 5, img: 'img/elka.jpg', m: 1 },
    { text: '–ú–ï–®–û–ö', q: '‚ú® –í —á—ë–º –î–µ–¥ –ú–æ—Ä–æ–∑ –Ω–æ—Å–∏—Ç —á—É–¥–æ –∏ –ø–æ–¥–∞—Ä–∫–∏? (5 –±—É–∫–≤)', row: 3, col: 4, img: 'img/meshok.jpg', m: 2 },
    { text: '–°–ù–ï–ì', q: '‚ú® –û–Ω –ø–∞–¥–∞–µ—Ç —Å –Ω–µ–±–∞ –∏ —Ç–∞–µ—Ç –≤ –ª–∞–¥–æ—à–∫–µ. (4 –±—É–∫–≤—ã)', row: 4, col: 4, img: 'img/sneg.jpg', m: 2 },
    { text: '–ë–´–ß–û–ö', q: '‚ú® –ò–¥–µ—Ç ... –∫–∞—á–∞–µ—Ç—Å—è, –≤–∑–¥—ã—Ö–∞–µ—Ç –Ω–∞ —Ö–æ–¥—É (5 –±—É–∫–≤)', row: 5, col: 6, img: 'img/bai-bai.jpg', m: 0 },
    { text: '–°–ê–ù–ö–ò', q: '‚ú® –ß—Ç–æ –º—á–∏—Ç—Å—è —Å –≥–æ—Ä–∫–∏ –∏ –¥–µ–ª–∞–µ—Ç –¥–µ—Ç–µ–π —Å—á–∞—Å—Ç–ª–∏–≤—ã–º–∏? (5 –±—É–∫–≤)', row: 6, col: 6, img: 'img/sanki.jpg', m: 0 },
    { text: '–ö–û–ù–§–ï–¢–´', q: '‚ú® –Ø—Ä–∫–∏–µ –∏ —Å–ª–∞–¥–∫–∏–µ, –ø—Ä—è—á—É—Ç—Å—è –ø–æ–¥ —ë–ª–∫–æ–π. (7 –±—É–∫–≤)', row: 7, col: 1, img: 'img/konfeti.jpg', m: 5 },
    { text: '–û–õ–ò–í–¨–ï', q: '‚ú® –ö–∞–∫–æ–π —Å–∞–ª–∞—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å—Ç–æ–∏—Ç –Ω–∞ –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–º —Å—Ç–æ–ª–µ? (6 –±—É–∫–≤)', row: 8, col: 3, img: 'img/olive.jpg', m: 3 },
    { text: '–°–ù–ï–ì–£–†–û–ß–ö–ê', q: '‚ú® –ö—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –î–µ–¥—É –ú–æ—Ä–æ–∑—É –¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–∫–∏? (10 –±—É–∫–≤)', row: 9, col: 0, img: 'img/sneguroshka.jpg', m: 6 },
    { text: '', q: '', row: 10, col: 0, m: 0 },
    { text: '–°–ï–í–ï–†', q: '‚ú® –ì–¥–µ –∂–∏–≤—ë—Ç –î–µ–¥ –ú–æ—Ä–æ–∑? (5 –±—É–∫–≤)', row: 11, col: 4, img: 'img/sever.jpg', m: 2 },
    { text: '', q: '', row: 12, col: 0, m: 0 },
    { text: '–°–ê–ù–¢–ê', q: '‚ú® –ö—Ç–æ –ª–µ—Ç–∞–µ—Ç –Ω–∞ —Å–∞–Ω—è—Ö —Å –æ–ª–µ–Ω—è–º–∏? (5 –±—É–∫–≤)', row: 13, col: 6, img: 'img/santa.jpg', m: 0 },
    { text: '–î–ï–¢–ò', q: '‚ú® –ö—Ç–æ –≤–µ—Ä–∏—Ç –≤ —á—É–¥–æ –∏ –ª–µ–ø–∏—Ç —Å–Ω–µ–≥–æ–≤–∏–∫–∞? (4 –±—É–∫–≤—ã)', row: 14, col: 5, img: 'img/deti.jpg', m: 1 },
    { text: '–ü–û–î–ê–†–û–ö', q: '‚ú® –ß—Ç–æ –±–ª–µ—Å—Ç—è—â–µ–µ —Å—Ç–æ–∏—Ç –ø–æ–¥ —ë–ª–∫–æ–π? (7 –±—É–∫–≤)', row: 15, col: 2, img: 'img/podarok.jpg', m: 4 },
    { text: '–ó–í–ï–ó–î–ê', q: '‚ú® –ß—Ç–æ —Å–≤–µ—Ä–∫–∞–µ—Ç –Ω–∞ –º–∞–∫—É—à–∫–µ —ë–ª–∫–∏? (6 –±—É–∫–≤)', row: 16, col: 2, img: 'img/zvezda.jpg', m: 4 },
    { text: '–ó–ê–Ø–¶', q: '‚ú® –ö—Ç–æ —Å–∫–∞—á–µ—Ç –ø–æ —Å–Ω–µ–≥—É —Å –¥–ª–∏–Ω–Ω—ã–º–∏ —É—à–∞–º–∏? (4 –±—É–∫–≤)', row: 17, col: 3, img: 'img/zayaz.jpg', m: 3 },
    { text: '–í–ï–î–†–û', q: '‚ú® –ß—Ç–æ —Å—Ç–æ–∏—Ç –≤–º–µ—Å—Ç–æ —à–∞–ø–∫–∏ —É —Å–Ω–µ–≥–æ–≤–∏–∫–∞? (5 –±—É–∫–≤)', row: 18, col: 5, img: 'img/vedro.jpg', m: 1 }
];

// –°—á–∏—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–ø—É—Å—Ç—ã–µ —Å–ª–æ–≤–∞
const TOTAL_WORDS = words.filter(w => w.text && w.text.trim().length > 0).length;

const grid = [];
for (let r = 0; r < words.length; r++) {
    grid[r] = [];
    for (let c = 0; c < cols; c++) {
        const cell = document.createElement('div');
        cell.className = 'cell blank';
        cell.dataset.r = r;
        cell.dataset.c = c;
        container.appendChild(cell);
        grid[r][c] = cell;
    }
}

words.forEach((w, i) => {
    const wordLength = w.text.length;

    for (let k = 0; k < wordLength; k++) {
        const r = w.row;
        const c = w.col + k;
        const cell = grid[r][c];

        cell.classList.remove('blank');
        cell.classList.add('cell');
        cell.dataset.letter = w.text[k];

        if (k === 0) {
            cell.classList.add('start');
            cell.title = '–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å';
            cell.dataset.index = i;
            cell.addEventListener('click', startInput);

            // ‚¨áÔ∏è –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä —Å–ª–æ–≤–∞ –≤ —è—á–µ–π–∫—É
            const number = document.createElement('div');
            number.textContent = (i + 1);
            number.classList.add('number');
            cell.appendChild(number);
        }
    }
});

// –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç –∫–ª–µ—Ç–∫—É –±—É–∫–≤—ã –≥–ª–∞–≤–Ω–æ–π —Ñ—Ä–∞–∑—ã –ø–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–ª–æ–≤–∞
function mainWordLetterShow() {
    const cells = getCurrentWordInGrid();

    if (cells) {
        const highlightCell = cells[currentWord.col + currentWord.m];
        if (highlightCell) {
            highlightCell.classList.add('mainWord');
        }
    }
}

// —Ç—ã–∫–Ω—É–ª–∏ –Ω–∞ —Ü–∏—Ñ—Ä—É
function startInput(e) {
    e.preventDefault();

    if (e.target.classList.contains('filled')) {
        return;
    }

    const idx = e.currentTarget.dataset.index;
    currentWord = words[idx];

    document.getElementById('question-text').textContent = currentWord.q || '–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ:';
    modalInput.value = '';
    document.getElementById('submit-answer').dataset.index = idx;

    modal.style.display = 'flex';
    requestAnimationFrame(() => modal.classList.add('show')); // –ø–ª–∞–≤–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å
    document.body.classList.add('modal-open');
    const imagePath = currentWord.img || `img/${currentWord.text.toLowerCase()}.jpg`;
    const img = document.getElementById('question-image');
    img.src = imagePath;
    img.style.display = 'block';

    document.getElementById('modal').style.display = 'flex';
    modalInput.focus();
    modalOpen = true;

    keyboardSafeModal();
}

// –ü—Ä–æ–≥—Ä–µ—Å—Å –∏ —Ñ–ª–∞–≥ —Ñ–∏–Ω–∞–ª–∞
const solvedWords = new Set();
let finalShown = false;

// –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
modalOk.onclick = checkAnswer;

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
modal.querySelector('.close').onclick = closeModal;
document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
        closeModal();
        return;
    }
    if (e.key === 'Enter' && modalOpen) {
        checkAnswer();

        return;
    }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç
function checkAnswer() {
    if (!currentWord) return;

    const userAnswer = modalInput.value.trim().toUpperCase();

    hideWrongText();

    if (userAnswer === currentWord.text) {
        // –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        solvedWords.add(currentWord.text);

        // 1) –∑–∞–ø–æ–ª–Ω—è–µ–º –∫–ª–µ—Ç–∫–∏ 
        fillWord();

        // 1.1) –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –±—É–∫–≤—É –≥–ª–∞–≤–Ω–æ–π —Ñ—Ä–∞–∑—ã
        mainWordLetterShow();

        if (!finalShown && solvedWords.size === TOTAL_WORDS) {
            finalShown = true;
            setTimeout(showFinalCelebration, 300);
        } else {
            // –∑–∞–ø—É—Å–∫–∞–µ–º "–ü—Ä–∞–≤–∏–ª—å–Ω–æ!" –∏ –∏—Å–∫—Ä—ã
            // –≤—ã–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
            showCorrectAtWord();
            // 2) –¥–∞—ë–º –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–µ–∫—É–Ω–¥—É –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å, –∑–∞—Ç–µ–º –ø—Ä—è—á–µ–º –±–∞–Ω–Ω–µ—Ä –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
            requestAnimationFrame(() => {
                setTimeout(() => {
                    const msg = document.getElementById('correctMsg');
                    if (msg) msg.style.display = 'none';
                }, 1200);                   // –ø–æ–¥–≥–æ–Ω–∏ –ø–æ–¥ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏—Å–∫—Ä/–±–∞–Ω–Ω–µ—Ä–∞
            });
        }

        // 1.2) –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –≤–≤–æ–¥–∞
        closeModal();
    } else {
        showWrongText();
        modalInput.focus();
    }
    console.log(`Solved: ${solvedWords.size}/${TOTAL_WORDS}`);
}

function closeModal() {
    if (!modalOpen) return;

    hideWrongText();

    modal.classList.remove('show');
    setTimeout(() => {               // –¥–æ–∂–¥–∞—Ç—å—Å—è CSS-–∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
        modal.style.display = 'none';
    }, 200);

    document.body.classList.remove('modal-open');
    currentWord = null;
    modalOpen = false;
}

// --- iOS: —á—Ç–æ–±—ã –º–æ–¥–∞–ª–∫–∞ –±—ã–ª–∞ —Ä–æ–≤–Ω–æ –Ω–∞–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π ---
function keyboardSafeModal() {
    const vv = window.visualViewport;        // iOS Safari: –µ—Å—Ç—å –ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞
    if (!vv) return;                         // –µ—Å–ª–∏ API –Ω–µ—Ç ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º

    // –∑–∞–ø–æ–º–Ω–∏–º –∏—Å—Ö–æ–¥–Ω—ã–π padding-bottom —É –æ–≤–µ—Ä–ª–µ—è-–º–æ–¥–∞–ª–∫–∏ (#modal)
    const basePadding = parseFloat(getComputedStyle(modal).paddingBottom) || 0;

    function isOpen() {
        return !!modalOpen && modal.style.display !== 'none';
    }

    // –æ—Ü–µ–Ω–∫–∞ –≤—ã—Å–æ—Ç—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã = —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É layout viewport –∏ visual viewport
    function keyboardHeight() {
        const kb = window.innerHeight - (vv.height + vv.offsetTop);
        return kb > 0 ? kb : 0;
    }

    function adjust() {
        if (!isOpen()) return;

        const kb = keyboardHeight();
        const card = modal.querySelector('.modal-content');

        if (kb > 0) {
            // –ü–æ–¥–Ω–∏–º–µ–º –≤—Å—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–¥–∞–ª–∫–∏ –∑–∞ —Å—á—ë—Ç –Ω–∏–∂–Ω–µ–≥–æ padding:
            modal.style.paddingBottom = (basePadding + kb + 8) + 'px';

            // –ß—Ç–æ–±—ã –∫–∞—Ä—Ç–æ—á–∫–∞ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –≤–ª–µ–∑–∞–ª–∞ –≤ –≤–∏–¥–∏–º—É—é –æ–±–ª–∞—Å—Ç—å:
            if (card) {
                card.style.maxHeight = `min(86vh, ${Math.floor(vv.height - 24)}px)`;
            } else {
                // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä—ã—Ç–∞ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
                modal.style.paddingBottom = basePadding + 'px';
                if (card) card.style.maxHeight = '';
            }
        }

        // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ–≥–æ –≤—å—é–ø–æ—Ä—Ç–∞ –∏ –µ–≥–æ ¬´–ø—Ä–æ–∫—Ä—É—Ç–∫–∞¬ª –≤–æ –≤—Ä–µ–º—è –ø–æ–∫–∞–∑–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        vv.addEventListener('resize', adjust);
        vv.addEventListener('scroll', adjust);

        // –ü—Ä–∏ —Ñ–æ–∫—É—Å–µ –Ω–∞ –ø–æ–ª–µ ‚Äî —á—É—Ç—å –ø–æ–∑–∂–µ, –∫–æ–≥–¥–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–∂–µ –ø–æ–¥–Ω—è–ª–∞—Å—å
        modalInput.addEventListener('focus', () => setTimeout(adjust, 60));

        // –í–µ—Ä–Ω—É—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
        const _close = closeModal;
        window.closeModal = function () {
            _close();
            modal.style.paddingBottom = basePadding + 'px';
            const card = modal.querySelector('.modal-content');
            if (card) card.style.maxHeight = '';
        };
        // –í—ã–∑–æ–≤–µ–º –ø–æ–¥—Å—Ç—Ä–æ–π–∫—É —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –≤ startInput
        window.__iosAdjustModal = adjust;
    };

    // –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ, —á—Ç–æ–±—ã –ø–æ–¥—Å—Ç—Ä–æ–∏—Ç—å—Å—è –≤–æ–≤—Ä–µ–º—è
    const _open = startInput;
    window.startInput = function (w) {
        _open(w);
        setTimeout(adjust, 60);
    };

    const _close = closeModal;
    window.closeModal = function () {
        _close();
        modal.style.paddingBottom = basePadding + 'px';
        const card = modal.querySelector('.modal-content');
        if (card) card.style.maxHeight = '';
    };

    // –ù–∞ —Å–º–µ–Ω—É –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ ‚Äî –ø–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å —á–µ—Ä–µ–∑ –ø–∞—É–∑—É
    window.addEventListener('orientationchange', () => setTimeout(adjust, 300));
}

// –ó–∞–ø–æ–ª–Ω—è–µ—Ç –∫–ª–µ—Ç–∫–∏ –µ—Å–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏
function fillWord() {
    const w = currentWord;
    if (!currentWord) {
        return;
    }

    for (let k = 0; k < w.text.length; k++) {
        const r = w.row;
        const c = w.col + k;
        const cell = grid[r][c];

        cell.textContent = w.text[k];
        cell.classList.add('filled');
    }
}

// –ø–æ–∫–∞–∑—ã–≤–∞–µ–º "–ü—Ä–∞–≤–∏–ª—å–Ω–æ!" –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∏—Å–∫—Ä—ã –∏–∑ —Ü–µ–Ω—Ç—Ä–∞ —É–≥–∞–¥–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞
function showCorrectAtWord() {
    const w = currentWord;
    if (!currentWord) {
        return;
    }

    // 1) –¶–µ–Ω—Ç—Ä —Å–ª–æ–≤–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
    const first = grid[w.row][w.col].getBoundingClientRect();
    const last = grid[w.row][w.col + w.text.length - 1].getBoundingClientRect();
    const cx = (first.left + last.right) / 2;
    const cy = first.top - 10; // —á—É—Ç—å –≤—ã—à–µ —Å–ª–æ–≤–∞

    // 2) –°–æ–æ–±—â–µ–Ω–∏–µ "–ü—Ä–∞–≤–∏–ª—å–Ω–æ!"
    const msg = document.getElementById('correctMsg');
    msg.style.display = 'block';
    msg.classList.remove('pop');
    void msg.offsetWidth;   // –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏
    msg.classList.add('pop');

    // 3) –ò—Å–∫—Ä—ã
    const layer = document.getElementById('fxLayer');
    const hues = [45, 0, 200, 120, 300]; // —Ü–≤–µ—Ç–∞: –∑–æ–ª–æ—Ç–æ, –∫—Ä–∞—Å–Ω—ã–π, —Å–∏–Ω–∏–π, –∑–µ–ª—ë–Ω—ã–π, —Ä–æ–∑–æ–≤—ã–π
    const count = 18;

    for (let i = 0; i < count; i++) {
        const s = document.createElement('span');
        s.className = 'spark';

        // —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Ç–æ—á–∫–∞
        s.style.left = cx + 'px';
        s.style.top = cy + 'px';

        // —É–≥–æ–ª —Ä–∞–∑–ª—ë—Ç–∞
        const angle = (Math.PI * 2) * (i / count);
        const base = 150 + Math.random() * 100;
        const size = 6 + Math.random() * 10;
        const factor = 0.9 + (size / 16) * 0.4;
        const speed = base * factor;
        const dur = 1.1 + (size / 16) * 1.1;

        // —Å–≤–æ–π—Å—Ç–≤–∞ —á–∞—Å—Ç–∏—Ü—ã
        s.style.setProperty('--dx', Math.cos(angle) * speed + 'px');
        s.style.setProperty('--dy', Math.sin(angle) * speed + 'px');
        s.style.setProperty('--h', hues[i % hues.length]);
        s.style.setProperty('--dur', dur.toFixed(2));

        s.style.width = size + 'px';
        s.style.height = size + 'px';

        layer.appendChild(s);
        s.addEventListener('animationend', () => s.remove());
    }
}
// --- –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∞–ª—é—Ç –∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ ---
function showFinalCelebration() {
    const layer = document.getElementById('fxLayer');

    // Canvas-—ç—Ñ—Ñ–µ–∫—Ç—ã: –±—ã—Å—Ç—Ä–µ–µ –∏ –ø–ª–∞–≤–Ω–µ–µ, —á–µ–º –∫—É—á–∞ DOM-—á–∞—Å—Ç–∏—Ü
    const canvas = document.createElement('canvas');
    canvas.style.position = 'absolute';
    canvas.style.inset = '0';
    canvas.style.pointerEvents = 'none';
    layer.appendChild(canvas);

    const ctx = canvas.getContext('2d', { alpha: true });
    const dpr = Math.max(1, Math.floor(window.devicePixelRatio || 1));

    function resize() {
        const rect = layer.getBoundingClientRect();
        canvas.width = Math.max(1, Math.floor(rect.width * dpr));
        canvas.height = Math.max(1, Math.floor(rect.height * dpr));
        canvas.style.width = rect.width + 'px';
        canvas.style.height = rect.height + 'px';
        ctx.setTransform(dpr, 0, 0, dpr, 0, 0); // –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    }
    resize();
    window.addEventListener('resize', resize);

    const particles = [];
    let running = true;

    function burst(x, y, n = 80) {
        for (let i = 0; i < n; i++) {
            const ang = Math.random() * Math.PI * 2;
            const spd = 2 + Math.random() * 4;
            particles.push({
                x, y,
                vx: Math.cos(ang) * spd,
                vy: Math.sin(ang) * spd - 1.2,
                life: 60 + Math.random() * 20,
                r: 2 + Math.random() * 2.2,
                color: `hsl(${Math.floor(Math.random() * 360)},90%,60%)`
            });
        }
    }

    function tick() {
        if (!running) return;
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        for (let i = particles.length - 1; i >= 0; i--) {
            const p = particles[i];
            p.x += p.vx; p.y += p.vy; p.vy += 0.045; p.life -= 1;
            ctx.globalAlpha = Math.max(p.life / 80, 0);
            ctx.beginPath(); ctx.arc(p.x, p.y, p.r, 0, Math.PI * 2);
            ctx.fillStyle = p.color; ctx.fill();
            if (p.life <= 0) particles.splice(i, 1);
        }
        requestAnimationFrame(tick);
    }

    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–ª–ø—ã –≤ —Ä–∞–∑–Ω—ã—Ö —Ç–æ—á–∫–∞—Ö
    const timer = setInterval(() => {
        const x = canvas.width * (0.15 + Math.random() * 0.7);
        const y = canvas.height * (0.12 + Math.random() * 0.28);
        burst(x, y, 80);
    }, 500);

    // –ü–æ–∑–¥—Ä–∞–≤–∏—Ç–µ–ª—å–Ω—ã–π –±–∞–Ω–Ω–µ—Ä
    const congr = document.createElement('div');
    congr.id = 'finalCongrats';
    congr.innerHTML = '‚ú®–£—Ä–∞!‚ú®<br>–í—Å–µ —Å–ª–æ–≤–∞ —Ä–∞–∑–≥–∞–¥–∞–Ω—ã!<br>–ó–∞–≥–∞–¥–∞–π –∂–µ–ª–∞–Ω–∏–µüßö‚Äç‚ôÄÔ∏è';
    document.body.appendChild(congr);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É
    congr.addEventListener('click', () => {
        running = false;
        clearInterval(timer);
        window.removeEventListener('resize', resize);
        layer.removeChild(canvas);
        congr.remove();
    }, { once: true });

    tick();

    –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ
    setTimeout(() => {
        running = false;
        clearInterval(timer);
        window.removeEventListener('resize', resize);
        layer.removeChild(canvas);
        setTimeout(() => congr.remove(), 800);
    }, 4500);
}

// –ø–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–ª–æ–≤–∞ (–≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
function getCurrentWordInGrid() {
    const r = currentWord.row;
    return grid[r];
}

function showWrongText() {
    if (wrongText && wrongText[0]) {
        wrongText[0].classList.add("show");
    }
}

function hideWrongText() {
    if (wrongText && wrongText[0]) {
        wrongText[0].classList.remove("show");
    }
}
